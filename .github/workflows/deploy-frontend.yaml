name: Deploy Frontend

on:
  workflow_call:
    inputs:
      environment:
        description: 'Environment name'
        type: string
        required: true

jobs:
  deploy_frontend:
    name: Deploy Frontend
    runs-on: [self-hosted, "run_id:${{ github.run_id }}"]
    environment: ${{ inputs.environment }}
    permissions:
      contents: read
    env:
      NAMESPACE: ${{ secrets.NAMESPACE }}
      CONFIG_FILE: ${{ secrets.CONFIG_FILE }}
      ENVIRONMENT: ${{ secrets.ENVIRONMENT }}
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}

    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Update Kubeconfig
        id: update_kubeconfig
        run: |
          set -eo pipefail

          aws eks update-kubeconfig --region ${{ secrets.AWS_REGION }} --name ${{ secrets.EKS_CLUSTER_NAME }}

      - name: Apply Kube Files
        id: apply_kube_files
        run: |
          set -eo pipefail
          source $CONFIG_FILE
          source ./deployment_functions.sh

          echo "Retrieving image digest for $FRONTEND_SERVICE_NAME version $FRONTEND_IMAGE_VERSION"
          imageDigest="$(getDockerImageDigest $FRONTEND_SERVICE_NAME $FRONTEND_IMAGE_VERSION)"
          echo "Image digest: $imageDigest"

          applyKubeFile "frontend/${ENVIRONMENT}/configmap.yaml" $FRONTEND_SERVICE_NAME
          applyKubeFile "frontend/${ENVIRONMENT}/deployment.yaml" $FRONTEND_SERVICE_NAME $imageDigest $FRONTEND_RESOURCE_CPU $FRONTEND_RESOURCE_MEM
          applyKubeFile "frontend/${ENVIRONMENT}/service.yaml" $FRONTEND_SERVICE_NAME

      - name: Wait for Service Readiness
        id: wait_ready
        run: |
          set -eo pipefail
          source $CONFIG_FILE
          source ./deployment_functions.sh

          waitForServiceReady $FRONTEND_SERVICE_NAME

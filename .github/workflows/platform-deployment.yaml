name: Platform Deployment

on:
  workflow_dispatch:
    inputs:
      environment:
        description: Environment to deploy
        required: true
        type: environment

jobs:
  validate_inputs:
    name: Validate Inputs
    runs-on: ubuntu-22.04
    # we could use an "if" here, but if this job is skipped then all the downstream jobs are skipped even if they don't need this job

    steps:
      - name: Print Inputs
        id: print_inputs
        run: |
          echo "- environment: \`${{ inputs.environment }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- ref: \`${{ github.ref }}\`" >> $GITHUB_STEP_SUMMARY

      - name: Validate Prod Ref
        id: check_ref
        run: |
          set -euxo pipefail

          if [ ! "${{ inputs.environment }}" = "prod" ]; then
            exit 0
          fi

          if [ ! "${{ github.ref_type }}" = "tag" ]; then
            echo >&2 "ERROR: deploy on prod environment must use a git tag"
            exit 1
          fi

  create_runner:
    name: Create Self-Hosted Runner
    needs: [validate_inputs]
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        index: [1, 2, 3, 4 ,5, 6, 7, 8, 9, 10]
      fail-fast: true
    environment: ${{ inputs.environment }}
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Start GitHub Runner
        id: start_runner
        uses: pagopa/interop-github-runner-aws-create-action@main
        with:
          environment: ${{ inputs.environment }}
          aws_region: ${{ secrets.AWS_REGION }}
          iam_role_arn: ${{ secrets.ECS_IAM_ROLE_ARN }}
          ecs_cluster_name: ${{ secrets.ECS_CLUSTER_NAME }}
          ecs_task_definition: ${{ secrets.TASK_DEFINITION }}
          ecs_task_cpu: ${{ vars.ECS_TASK_CPU }}
          ecs_task_memory: ${{ vars.ECS_TASK_MEMORY }}
          ecs_container_name: ${{ vars.ECS_TASK_CONTAINER_NAME }}
          ecs_task_max_duration_seconds: ${{ vars.ECS_TASK_MAX_DURATION_SECONDS }}
          ecs_task_subnet_id: ${{ secrets.SUBNET_ID }}
          ecs_task_sec_group: ${{ secrets.SEC_GROUP_ID }}
          pat_token: ${{ secrets.BOT_TOKEN }}

  deploy_configs:
    name: Configurations
    needs: [create_runner]
    permissions:
      contents: read
    uses: ./.github/workflows/deploy-configs.yaml
    secrets: inherit
    with:
      environment: ${{ inputs.environment }}

  deploy_frontend:
    name: Frontend
    needs: [deploy_configs]
    permissions:
      contents: read
    uses: ./.github/workflows/deploy-frontend.yaml
    secrets: inherit
    with:
      environment: ${{ inputs.environment }}

  deploy_agreement_management:
    name: Agreement Management
    needs: [deploy_configs]
    if: ${{ inputs.environment != 'dev-refactor' && inputs.environment != 'test' && inputs.environment != 'prod'}}
    permissions:
      contents: read
    uses: ./.github/workflows/deploy-service.yaml
    secrets: inherit
    with:
      environment: ${{ inputs.environment }}
      kustomize_overlay_path: "overlays/agreement-management/${{ inputs.environment }}"
      service_name_var_name: AGREEMENT_MANAGEMENT_SERVICE_NAME
      image_version_var_name: AGREEMENT_MANAGEMENT_IMAGE_VERSION
      resource_cpu_var_name: AGREEMENT_MANAGEMENT_RESOURCE_CPU
      resource_mem_var_name: AGREEMENT_MANAGEMENT_RESOURCE_MEM

  deploy_agreement_email_sender:
    name: Agreement Email Sender
    needs: [deploy_configs]
    if: ${{ inputs.environment == 'dev-refactor' || inputs.environment == 'test' || inputs.environment == 'prod' }}
    permissions:
      contents: read
    uses: ./.github/workflows/deploy-service.yaml
    secrets: inherit
    with:
      environment: ${{ inputs.environment }}
      kustomize_overlay_path: "overlays/agreement-email-sender/${{ inputs.environment }}"
      service_name_var_name: AGREEMENT_EMAIL_SENDER_SERVICE_NAME
      image_version_var_name: AGREEMENT_EMAIL_SENDER_IMAGE_VERSION
      resource_cpu_var_name: AGREEMENT_EMAIL_SENDER_RESOURCE_CPU
      resource_mem_var_name: AGREEMENT_EMAIL_SENDER_RESOURCE_MEM

  deploy_agreement_readmodel_writer:
    name: Agreement ReadModel Writer
    needs: [deploy_configs]
    if: ${{ inputs.environment == 'dev-refactor' || inputs.environment == 'test' || inputs.environment == 'prod' }}
    permissions:
      contents: read
    uses: ./.github/workflows/deploy-service.yaml
    secrets: inherit
    with:
      environment: ${{ inputs.environment }}
      kustomize_overlay_path: "overlays/agreement-readmodel-writer/${{ inputs.environment }}"
      service_name_var_name: AGREEMENT_READMODEL_WRITER_SERVICE_NAME
      image_version_var_name: AGREEMENT_READMODEL_WRITER_IMAGE_VERSION
      resource_cpu_var_name: AGREEMENT_READMODEL_WRITER_RESOURCE_CPU
      resource_mem_var_name: AGREEMENT_READMODEL_WRITER_RESOURCE_MEM

  deploy_agreement_process:
    name: Agreement Process
    needs: [deploy_configs]
    permissions:
      contents: read
    uses: ./.github/workflows/deploy-service.yaml
    secrets: inherit
    with:
      environment: ${{ inputs.environment }}
      kustomize_overlay_path: "overlays/agreement-process/${{ inputs.environment }}"
      service_name_var_name: AGREEMENT_PROCESS_SERVICE_NAME
      image_version_var_name: AGREEMENT_PROCESS_IMAGE_VERSION
      resource_cpu_var_name: AGREEMENT_PROCESS_RESOURCE_CPU
      resource_mem_var_name: AGREEMENT_PROCESS_RESOURCE_MEM

  deploy_attribute_registry_management:
    name: Attribute Registry Management
    needs: [deploy_configs]
    if: ${{ inputs.environment == 'att' }}
    permissions:
      contents: read
    uses: ./.github/workflows/deploy-service.yaml
    secrets: inherit
    with:
      environment: ${{ inputs.environment }}
      kustomize_overlay_path: "overlays/attribute-registry-management/${{ inputs.environment }}"
      service_name_var_name: ATTRIBUTE_REGISTRY_MANAGEMENT_SERVICE_NAME
      image_version_var_name: ATTRIBUTE_REGISTRY_MANAGEMENT_IMAGE_VERSION
      resource_cpu_var_name: ATTRIBUTE_REGISTRY_MANAGEMENT_RESOURCE_CPU
      resource_mem_var_name: ATTRIBUTE_REGISTRY_MANAGEMENT_RESOURCE_MEM

  deploy_attribute_registry_readmodel_writer:
    name: Attribute Registry ReadModel Writer
    needs: [deploy_configs]
    if: ${{ inputs.environment != 'att' }}
    permissions:
      contents: read
    uses: ./.github/workflows/deploy-service.yaml
    secrets: inherit
    with:
      environment: ${{ inputs.environment }}
      kustomize_overlay_path: "overlays/attribute-registry-readmodel-writer/${{ inputs.environment }}"
      service_name_var_name: ATTRIBUTE_REGISTRY_READMODEL_WRITER_SERVICE_NAME
      image_version_var_name: ATTRIBUTE_REGISTRY_READMODEL_WRITER_IMAGE_VERSION
      resource_cpu_var_name: ATTRIBUTE_REGISTRY_READMODEL_WRITER_RESOURCE_CPU
      resource_mem_var_name: ATTRIBUTE_REGISTRY_READMODEL_WRITER_RESOURCE_MEM

  deploy_attribute_registry_process:
    name: Attribute Registry Process
    needs: [deploy_configs]
    permissions:
      contents: read
    uses: ./.github/workflows/deploy-service.yaml
    secrets: inherit
    with:
      environment: ${{ inputs.environment }}
      kustomize_overlay_path: "overlays/attribute-registry-process/${{ inputs.environment }}"
      service_name_var_name: ATTRIBUTE_REGISTRY_PROCESS_SERVICE_NAME
      image_version_var_name: ATTRIBUTE_REGISTRY_PROCESS_IMAGE_VERSION
      resource_cpu_var_name: ATTRIBUTE_REGISTRY_PROCESS_RESOURCE_CPU
      resource_mem_var_name: ATTRIBUTE_REGISTRY_PROCESS_RESOURCE_MEM

  deploy_authorization_management:
    name: Authorization Management
    needs: [deploy_configs]
    permissions:
      contents: read
    uses: ./.github/workflows/deploy-service.yaml
    secrets: inherit
    with:
      environment: ${{ inputs.environment }}
      kustomize_overlay_path: "overlays/authorization-management/${{ inputs.environment }}"
      service_name_var_name: AUTHORIZATION_MANAGEMENT_SERVICE_NAME
      image_version_var_name: AUTHORIZATION_MANAGEMENT_IMAGE_VERSION
      resource_cpu_var_name: AUTHORIZATION_MANAGEMENT_RESOURCE_CPU
      resource_mem_var_name: AUTHORIZATION_MANAGEMENT_RESOURCE_MEM

  deploy_authorization_process:
    name: Authorization Process
    needs: [deploy_configs]
    permissions:
      contents: read
    uses: ./.github/workflows/deploy-service.yaml
    secrets: inherit
    with:
      environment: ${{ inputs.environment }}
      kustomize_overlay_path: "overlays/authorization-process/${{ inputs.environment }}"
      service_name_var_name: AUTHORIZATION_PROCESS_SERVICE_NAME
      image_version_var_name: AUTHORIZATION_PROCESS_IMAGE_VERSION
      resource_cpu_var_name: AUTHORIZATION_PROCESS_RESOURCE_CPU
      resource_mem_var_name: AUTHORIZATION_PROCESS_RESOURCE_MEM

  deploy_authorization_updater:
    name: Authorization Updater
    needs: [deploy_configs]
    if: ${{ inputs.environment != 'att' }}
    permissions:
      contents: read
    uses: ./.github/workflows/deploy-service.yaml
    secrets: inherit
    with:
      environment: ${{ inputs.environment }}
      kustomize_overlay_path: "overlays/authorization-updater/${{ inputs.environment }}"
      service_name_var_name: AUTHORIZATION_UPDATER_SERVICE_NAME
      image_version_var_name: AUTHORIZATION_UPDATER_IMAGE_VERSION
      resource_cpu_var_name: AUTHORIZATION_UPDATER_RESOURCE_CPU
      resource_mem_var_name: AUTHORIZATION_UPDATER_RESOURCE_MEM

  deploy_catalog_management:
    name: Catalog Management
    needs: [deploy_configs]
    if: ${{ inputs.environment == 'att' }}
    permissions:
      contents: read
    uses: ./.github/workflows/deploy-service.yaml
    secrets: inherit
    with:
      environment: ${{ inputs.environment }}
      kustomize_overlay_path: "overlays/catalog-management/${{ inputs.environment }}"
      service_name_var_name: CATALOG_MANAGEMENT_SERVICE_NAME
      image_version_var_name: CATALOG_MANAGEMENT_IMAGE_VERSION
      resource_cpu_var_name: CATALOG_MANAGEMENT_RESOURCE_CPU
      resource_mem_var_name: CATALOG_MANAGEMENT_RESOURCE_MEM

  deploy_catalog_readmodel_writer:
    name: Catalog ReadModel Writer
    needs: [deploy_configs]
    if: ${{ inputs.environment != 'att' }}
    permissions:
      contents: read
    uses: ./.github/workflows/deploy-service.yaml
    secrets: inherit
    with:
      environment: ${{ inputs.environment }}
      kustomize_overlay_path: "overlays/catalog-readmodel-writer/${{ inputs.environment }}"
      service_name_var_name: CATALOG_READMODEL_WRITER_SERVICE_NAME
      image_version_var_name: CATALOG_READMODEL_WRITER_IMAGE_VERSION
      resource_cpu_var_name: CATALOG_READMODEL_WRITER_RESOURCE_CPU
      resource_mem_var_name: CATALOG_READMODEL_WRITER_RESOURCE_MEM

  deploy_catalog_process:
    name: Catalog Process
    needs: [deploy_configs]
    permissions:
      contents: read
    uses: ./.github/workflows/deploy-service.yaml
    secrets: inherit
    with:
      environment: ${{ inputs.environment }}
      kustomize_overlay_path: "overlays/catalog-process/${{ inputs.environment }}"
      service_name_var_name: CATALOG_PROCESS_SERVICE_NAME
      image_version_var_name: CATALOG_PROCESS_IMAGE_VERSION
      resource_cpu_var_name: CATALOG_PROCESS_RESOURCE_CPU
      resource_mem_var_name: CATALOG_PROCESS_RESOURCE_MEM

  deploy_party_registry_proxy:
    name: Party Registry Proxy
    needs: [deploy_configs]
    permissions:
      contents: read
    uses: ./.github/workflows/deploy-service.yaml
    secrets: inherit
    with:
      environment: ${{ inputs.environment }}
      kustomize_overlay_path: "overlays/party-registry-proxy/${{ inputs.environment }}"
      service_name_var_name: PARTY_REGISTRY_PROXY_SERVICE_NAME
      image_version_var_name: PARTY_REGISTRY_PROXY_IMAGE_VERSION
      resource_cpu_var_name: PARTY_REGISTRY_PROXY_RESOURCE_CPU
      resource_mem_var_name: PARTY_REGISTRY_PROXY_RESOURCE_MEM

  deploy_purpose_management:
    name: Purpose Management
    needs: [deploy_configs]
    if: ${{ inputs.environment != 'dev-refactor' }}
    permissions:
      contents: read
    uses: ./.github/workflows/deploy-service.yaml
    secrets: inherit
    with:
      environment: ${{ inputs.environment }}
      kustomize_overlay_path: "overlays/purpose-management/${{ inputs.environment }}"
      service_name_var_name: PURPOSE_MANAGEMENT_SERVICE_NAME
      image_version_var_name: PURPOSE_MANAGEMENT_IMAGE_VERSION
      resource_cpu_var_name: PURPOSE_MANAGEMENT_RESOURCE_CPU
      resource_mem_var_name: PURPOSE_MANAGEMENT_RESOURCE_MEM

  deploy_purpose_process:
    name: Purpose Process
    needs: [deploy_configs]
    permissions:
      contents: read
    uses: ./.github/workflows/deploy-service.yaml
    secrets: inherit
    with:
      environment: ${{ inputs.environment }}
      kustomize_overlay_path: "overlays/purpose-process/${{ inputs.environment }}"
      service_name_var_name: PURPOSE_PROCESS_SERVICE_NAME
      image_version_var_name: PURPOSE_PROCESS_IMAGE_VERSION
      resource_cpu_var_name: PURPOSE_PROCESS_RESOURCE_CPU
      resource_mem_var_name: PURPOSE_PROCESS_RESOURCE_MEM

  deploy_purpose_readmodel_writer:
    name: Purpose ReadModel Writer
    needs: [deploy_configs]
    if: ${{ inputs.environment == 'dev-refactor' }}
    permissions:
      contents: read
    uses: ./.github/workflows/deploy-service.yaml
    secrets: inherit
    with:
      environment: ${{ inputs.environment }}
      kustomize_overlay_path: "overlays/purpose-readmodel-writer/${{ inputs.environment }}"
      service_name_var_name: PURPOSE_READMODEL_WRITER_SERVICE_NAME
      image_version_var_name: PURPOSE_READMODEL_WRITER_IMAGE_VERSION
      resource_cpu_var_name: PURPOSE_READMODEL_WRITER_RESOURCE_CPU
      resource_mem_var_name: PURPOSE_READMODEL_WRITER_RESOURCE_MEM

  deploy_tenant_management:
    name: Tenant Management
    needs: [deploy_configs]
    permissions:
      contents: read
    uses: ./.github/workflows/deploy-service.yaml
    secrets: inherit
    with:
      environment: ${{ inputs.environment }}
      kustomize_overlay_path: "overlays/tenant-management/${{ inputs.environment }}"
      service_name_var_name: TENANT_MANAGEMENT_SERVICE_NAME
      image_version_var_name: TENANT_MANAGEMENT_IMAGE_VERSION
      resource_cpu_var_name: TENANT_MANAGEMENT_RESOURCE_CPU
      resource_mem_var_name: TENANT_MANAGEMENT_RESOURCE_MEM

  deploy_tenant_process:
    name: Tenant Process
    needs: [deploy_configs]
    permissions:
      contents: read
    uses: ./.github/workflows/deploy-service.yaml
    secrets: inherit
    with:
      environment: ${{ inputs.environment }}
      kustomize_overlay_path: "overlays/tenant-process/${{ inputs.environment }}"
      service_name_var_name: TENANT_PROCESS_SERVICE_NAME
      image_version_var_name: TENANT_PROCESS_IMAGE_VERSION
      resource_cpu_var_name: TENANT_PROCESS_RESOURCE_CPU
      resource_mem_var_name: TENANT_PROCESS_RESOURCE_MEM

  deploy_backend_for_frontend:
    name: Backend For Frontend
    needs: [deploy_configs]
    permissions:
      contents: read
    uses: ./.github/workflows/deploy-service.yaml
    secrets: inherit
    with:
      environment: ${{ inputs.environment }}
      kustomize_overlay_path: "overlays/backend-for-frontend/${{ inputs.environment }}"
      service_name_var_name: BACKEND_FOR_FRONTEND_SERVICE_NAME
      image_version_var_name: BACKEND_FOR_FRONTEND_IMAGE_VERSION
      resource_cpu_var_name: BACKEND_FOR_FRONTEND_RESOURCE_CPU
      resource_mem_var_name: BACKEND_FOR_FRONTEND_RESOURCE_MEM

  deploy_api_gateway:
    name: API Gateway
    needs: [deploy_configs]
    permissions:
      contents: read
    uses: ./.github/workflows/deploy-service.yaml
    secrets: inherit
    with:
      environment: ${{ inputs.environment }}
      kustomize_overlay_path: "overlays/api-gateway/${{ inputs.environment }}"
      service_name_var_name: API_GATEWAY_SERVICE_NAME
      image_version_var_name: API_GATEWAY_IMAGE_VERSION
      resource_cpu_var_name: API_GATEWAY_RESOURCE_CPU
      resource_mem_var_name: API_GATEWAY_RESOURCE_MEM

  deploy_authorization_server:
    name: Authorization Server
    needs: [deploy_configs]
    permissions:
      contents: read
    uses: ./.github/workflows/deploy-service.yaml
    secrets: inherit
    with:
      environment: ${{ inputs.environment }}
      kustomize_overlay_path: "overlays/authorization-server/${{ inputs.environment }}"
      service_name_var_name: AUTHORIZATION_SERVER_SERVICE_NAME
      image_version_var_name: AUTHORIZATION_SERVER_IMAGE_VERSION
      resource_cpu_var_name: AUTHORIZATION_SERVER_RESOURCE_CPU
      resource_mem_var_name: AUTHORIZATION_SERVER_RESOURCE_MEM

  deploy_notifier:
    name: Notifier
    needs: [deploy_configs]
    permissions:
      contents: read
    uses: ./.github/workflows/deploy-service.yaml
    secrets: inherit
    with:
      environment: ${{ inputs.environment }}
      kustomize_overlay_path: "overlays/notifier/${{ inputs.environment }}"
      service_name_var_name: NOTIFIER_SERVICE_NAME
      image_version_var_name: NOTIFIER_IMAGE_VERSION
      resource_cpu_var_name: NOTIFIER_RESOURCE_CPU
      resource_mem_var_name: NOTIFIER_RESOURCE_MEM

  deploy_notifier_seeder:
    name: Notifier Seeder
    needs: [deploy_configs]
    if: ${{ inputs.environment != 'att' }}
    permissions:
      contents: read
    uses: ./.github/workflows/deploy-service.yaml
    secrets: inherit
    with:
      environment: ${{ inputs.environment }}
      kustomize_overlay_path: "overlays/notifier-seeder/${{ inputs.environment }}"
      service_name_var_name: NOTIFIER_SEEDER_SERVICE_NAME
      image_version_var_name: NOTIFIER_SEEDER_IMAGE_VERSION
      resource_cpu_var_name: NOTIFIER_SEEDER_RESOURCE_CPU
      resource_mem_var_name: NOTIFIER_SEEDER_RESOURCE_MEM

  deploy_eservice_descriptors_archiver:
    name: EService Descriptors Archiver
    needs: [deploy_configs]
    permissions:
      contents: read
    uses: ./.github/workflows/deploy-service.yaml
    secrets: inherit
    with:
      environment: ${{ inputs.environment }}
      kustomize_overlay_path: "overlays/eservice-descriptors-archiver/${{ inputs.environment }}"
      service_name_var_name: ESERVICE_DESCRIPTORS_ARCHIVER_SERVICE_NAME
      image_version_var_name: ESERVICE_DESCRIPTORS_ARCHIVER_IMAGE_VERSION
      resource_cpu_var_name: ESERVICE_DESCRIPTORS_ARCHIVER_RESOURCE_CPU
      resource_mem_var_name: ESERVICE_DESCRIPTORS_ARCHIVER_RESOURCE_MEM

  deploy_selfcare_onboarding_consumer:
    name: Selfcare onboarding consumer
    needs: [deploy_configs]
    if: ${{ inputs.environment != 'dev-refactor' && inputs.environment != 'qa' }}
    permissions:
      contents: read
    uses: ./.github/workflows/deploy-service.yaml
    secrets: inherit
    with:
      environment: ${{ inputs.environment }}
      kustomize_overlay_path: "overlays/selfcare-onboarding-consumer/${{ inputs.environment }}"
      service_name_var_name: SELFCARE_ONBOARDING_CONSUMER_SERVICE_NAME
      image_version_var_name: SELFCARE_ONBOARDING_CONSUMER_IMAGE_VERSION
      resource_cpu_var_name: SELFCARE_ONBOARDING_CONSUMER_RESOURCE_CPU
      resource_mem_var_name: SELFCARE_ONBOARDING_CONSUMER_RESOURCE_MEM

  deploy_attributes_loader:
    name: Attributes Loader
    needs: [deploy_configs]
    permissions:
      contents: read
    uses: ./.github/workflows/deploy-cronjob.yaml
    secrets: inherit
    with:
      environment: ${{ inputs.environment }}
      k8s_files_path: "jobs/attributes-loader/${{ inputs.environment }}"
      service_name_var_name: JOB_ATTRIBUTES_LOADER_SERVICE_NAME
      image_version_var_name: JOB_ATTRIBUTES_LOADER_IMAGE_VERSION
      resource_cpu_var_name: JOB_ATTRIBUTES_LOADER_RESOURCE_CPU
      resource_mem_var_name: JOB_ATTRIBUTES_LOADER_RESOURCE_MEM

  deploy_token_details_persister:
    name: Token Details Persister
    needs: [deploy_configs]
    permissions:
      contents: read
    uses: ./.github/workflows/deploy-cronjob.yaml
    secrets: inherit
    with:
      environment: ${{ inputs.environment }}
      k8s_files_path: "jobs/token-details-persister/${{ inputs.environment }}"
      service_name_var_name: JOB_DETAILS_PERSISTER_SERVICE_NAME
      image_version_var_name: JOB_DETAILS_PERSISTER_IMAGE_VERSION
      resource_cpu_var_name: JOB_DETAILS_PERSISTER_RESOURCE_CPU
      resource_mem_var_name: JOB_DETAILS_PERSISTER_RESOURCE_MEM

  deploy_tenants_certified_attributes_updater:
    name: Tenants Certified Attributes Updater
    needs: [deploy_configs]
    permissions:
      contents: read
    uses: ./.github/workflows/deploy-cronjob.yaml
    secrets: inherit
    with:
      environment: ${{ inputs.environment }}
      k8s_files_path: "jobs/tenants-certified-attributes-updater/${{ inputs.environment }}"
      service_name_var_name: JOB_TENANTS_CERTIFIED_ATTRIBUTES_UPDATER_SERVICE_NAME
      image_version_var_name: JOB_TENANTS_CERTIFIED_ATTRIBUTES_UPDATER_IMAGE_VERSION
      resource_cpu_var_name: JOB_TENANTS_CERTIFIED_ATTRIBUTES_UPDATER_RESOURCE_CPU
      resource_mem_var_name: JOB_TENANTS_CERTIFIED_ATTRIBUTES_UPDATER_RESOURCE_MEM

  deploy_party_registry_proxy_refresher:
    name: Party Registry Proxy Refresher
    needs: [deploy_configs]
    permissions:
      contents: read
    uses: ./.github/workflows/deploy-thirdparty-cronjob.yaml
    secrets: inherit
    with:
      environment: ${{ inputs.environment }}
      k8s_files_path: "thirdparty/party-registry-proxy-refresher/${{ inputs.environment }}"
      service_name_var_name: JOB_PARTY_REGISTRY_PROXY_REFRESHER_SERVICE_NAME
      resource_cpu_var_name: JOB_PARTY_REGISTRY_PROXY_REFRESHER_RESOURCE_CPU
      resource_mem_var_name: JOB_PARTY_REGISTRY_PROXY_REFRESHER_RESOURCE_MEM

  deploy_metrics_report_generator:
    name: Metrics report generator
    needs: [deploy_configs]
    permissions:
      contents: read
    uses: ./.github/workflows/deploy-cronjob.yaml
    secrets: inherit
    with:
      environment: ${{ inputs.environment }}
      k8s_files_path: "jobs/metrics-report-generator/${{ inputs.environment }}"
      service_name_var_name: JOB_METRICS_REPORT_GENERATOR_SERVICE_NAME
      image_version_var_name: JOB_METRICS_REPORT_GENERATOR_IMAGE_VERSION
      resource_cpu_var_name: JOB_METRICS_REPORT_GENERATOR_RESOURCE_CPU
      resource_mem_var_name: JOB_METRICS_REPORT_GENERATOR_RESOURCE_MEM

  deploy_anac_certified_attributes_importer:
    name: ANAC Certified Attributes Importer
    needs: [deploy_configs]
    permissions:
      contents: read
    uses: ./.github/workflows/deploy-cronjob.yaml
    secrets: inherit
    with:
      environment: ${{ inputs.environment }}
      k8s_files_path: "jobs/anac-certified-attributes-importer/${{ inputs.environment }}"
      service_name_var_name: JOB_ANAC_CERTIFIED_ATTRIBUTES_IMPORTER_SERVICE_NAME
      image_version_var_name: JOB_ANAC_CERTIFIED_ATTRIBUTES_IMPORTER_IMAGE_VERSION
      resource_cpu_var_name: JOB_ANAC_CERTIFIED_ATTRIBUTES_IMPORTER_RESOURCE_CPU
      resource_mem_var_name: JOB_ANAC_CERTIFIED_ATTRIBUTES_IMPORTER_RESOURCE_MEM

  deploy_ivass_certified_attributes_importer:
    name: IVASS Certified Attributes Importer
    needs: [deploy_configs]
    permissions:
      contents: read
    uses: ./.github/workflows/deploy-cronjob.yaml
    secrets: inherit
    with:
      environment: ${{ inputs.environment }}
      k8s_files_path: "jobs/ivass-certified-attributes-importer/${{ inputs.environment }}"
      service_name_var_name: JOB_IVASS_CERTIFIED_ATTRIBUTES_IMPORTER_SERVICE_NAME
      image_version_var_name: JOB_IVASS_CERTIFIED_ATTRIBUTES_IMPORTER_IMAGE_VERSION
      resource_cpu_var_name: JOB_IVASS_CERTIFIED_ATTRIBUTES_IMPORTER_RESOURCE_CPU
      resource_mem_var_name: JOB_IVASS_CERTIFIED_ATTRIBUTES_IMPORTER_RESOURCE_MEM

  deploy_pn_consumers:
    name: PN Consumers
    needs: [deploy_configs]
    permissions:
      contents: read
    uses: ./.github/workflows/deploy-cronjob.yaml
    secrets: inherit
    with:
      environment: ${{ inputs.environment }}
      k8s_files_path: "jobs/pn-consumers/${{ inputs.environment }}"
      service_name_var_name: JOB_PN_CONSUMERS_SERVICE_NAME
      image_version_var_name: JOB_PN_CONSUMERS_IMAGE_VERSION
      resource_cpu_var_name: JOB_PN_CONSUMERS_RESOURCE_CPU
      resource_mem_var_name: JOB_PN_CONSUMERS_RESOURCE_MEM

  deploy_padigitale_report_generator:
    name: PaDigitale report generator
    needs: [deploy_configs]
    permissions:
      contents: read
    uses: ./.github/workflows/deploy-cronjob.yaml
    secrets: inherit
    with:
      environment: ${{ inputs.environment }}
      k8s_files_path: "jobs/padigitale-report-generator/${{ inputs.environment }}"
      service_name_var_name: JOB_PADIGITALE_REPORT_GENERATOR_SERVICE_NAME
      image_version_var_name: JOB_PADIGITALE_REPORT_GENERATOR_IMAGE_VERSION
      resource_cpu_var_name: JOB_PADIGITALE_REPORT_GENERATOR_RESOURCE_CPU
      resource_mem_var_name: JOB_PADIGITALE_REPORT_GENERATOR_RESOURCE_MEM

  deploy_dashboard_metrics_report_generator:
    name: Dashboard metrics report generator
    needs: [deploy_configs]
    permissions:
      contents: read
    uses: ./.github/workflows/deploy-cronjob.yaml
    secrets: inherit
    with:
      environment: ${{ inputs.environment }}
      k8s_files_path: "jobs/dashboard-metrics-report-generator/${{ inputs.environment }}"
      service_name_var_name: JOB_DASHBOARD_METRICS_REPORT_GENERATOR_SERVICE_NAME
      image_version_var_name: JOB_DASHBOARD_METRICS_REPORT_GENERATOR_IMAGE_VERSION
      resource_cpu_var_name: JOB_DASHBOARD_METRICS_REPORT_GENERATOR_RESOURCE_CPU
      resource_mem_var_name: JOB_DASHBOARD_METRICS_REPORT_GENERATOR_RESOURCE_MEM

  deploy_dtd_catalog_exporter:
    name: DTD catalog exporter
    needs: [deploy_configs]
    permissions:
      contents: read
    uses: ./.github/workflows/deploy-cronjob.yaml
    secrets: inherit
    with:
      environment: ${{ inputs.environment }}
      k8s_files_path: "jobs/dtd-catalog-exporter/${{ inputs.environment }}"
      service_name_var_name: JOB_DTD_CATALOG_EXPORTER_SERVICE_NAME
      image_version_var_name: JOB_DTD_CATALOG_EXPORTER_IMAGE_VERSION
      resource_cpu_var_name: JOB_DTD_CATALOG_EXPORTER_RESOURCE_CPU
      resource_mem_var_name: JOB_DTD_CATALOG_EXPORTER_RESOURCE_MEM

  deploy_eservices_monitoring_exporter:
    name: EServices monitoring exporter
    needs: [deploy_configs]
    permissions:
      contents: read
    uses: ./.github/workflows/deploy-cronjob.yaml
    secrets: inherit
    with:
      environment: ${{ inputs.environment }}
      k8s_files_path: "jobs/eservices-monitoring-exporter/${{ inputs.environment }}"
      service_name_var_name: JOB_ESERVICES_MONITORING_EXPORTER_SERVICE_NAME
      image_version_var_name: JOB_ESERVICES_MONITORING_EXPORTER_IMAGE_VERSION
      resource_cpu_var_name: JOB_ESERVICES_MONITORING_EXPORTER_RESOURCE_CPU
      resource_mem_var_name: JOB_ESERVICES_MONITORING_EXPORTER_RESOURCE_MEM

  deploy_one_trust_notices:
    name: OneTrust notices
    needs: [deploy_configs]
    permissions:
      contents: read
    uses: ./.github/workflows/deploy-cronjob.yaml
    secrets: inherit
    with:
      environment: ${{ inputs.environment }}
      k8s_files_path: "jobs/one-trust-notices/${{ inputs.environment }}"
      service_name_var_name: JOB_ONE_TRUST_NOTICES_SERVICE_NAME
      image_version_var_name: JOB_ONE_TRUST_NOTICES_IMAGE_VERSION
      resource_cpu_var_name: JOB_ONE_TRUST_NOTICES_RESOURCE_CPU
      resource_mem_var_name: JOB_ONE_TRUST_NOTICES_RESOURCE_MEM

  deploy_dtd_metrics:
    name: DTD metrics
    needs: [deploy_configs]
    permissions:
      contents: read
    uses: ./.github/workflows/deploy-cronjob.yaml
    secrets: inherit
    with:
      environment: ${{ inputs.environment }}
      k8s_files_path: "jobs/dtd-metrics/${{ inputs.environment }}"
      service_name_var_name: JOB_DTD_METRICS_SERVICE_NAME
      image_version_var_name: JOB_DTD_METRICS_IMAGE_VERSION
      resource_cpu_var_name: JOB_DTD_METRICS_RESOURCE_CPU
      resource_mem_var_name: JOB_DTD_METRICS_RESOURCE_MEM

  deploy_datalake_data_export:
    name: Datalake data export
    needs: [deploy_configs]
    permissions:
      contents: read
    uses: ./.github/workflows/deploy-cronjob.yaml
    secrets: inherit
    with:
      environment: ${{ inputs.environment }}
      k8s_files_path: "jobs/datalake-data-export/${{ inputs.environment }}"
      service_name_var_name: JOB_DATALAKE_DATA_EXPORT_SERVICE_NAME
      image_version_var_name: JOB_DATALAKE_DATA_EXPORT_IMAGE_VERSION
      resource_cpu_var_name: JOB_DATALAKE_DATA_EXPORT_RESOURCE_CPU
      resource_mem_var_name: JOB_DATALAKE_DATA_EXPORT_RESOURCE_MEM

  deploy_redis:
    name: Redis
    needs: [deploy_configs]
    permissions:
      contents: read
    uses: ./.github/workflows/deploy-redis.yaml
    secrets: inherit
    with:
      environment: ${{ inputs.environment }}

  deploy_smtp_mock:
    name: SMTP mock
    needs: [deploy_configs]
    if: ${{ inputs.environment != 'prod' && inputs.environment != 'att' }}
    permissions:
      contents: read
    uses: ./.github/workflows/deploy-smtp-mock.yaml
    secrets: inherit
    with:
      environment: ${{ inputs.environment }}

  deploy_ingress:
    name: Ingress
    needs: [deploy_configs,
      deploy_frontend, deploy_backend_for_frontend,
      deploy_api_gateway, deploy_authorization_server
      ]
    permissions:
      contents: read
    uses: ./.github/workflows/deploy-ingress.yaml
    secrets: inherit
    with:
      environment: ${{ inputs.environment }}

  delete_runner:
    name: Delete Self-Hosted Runner
    needs: [create_runner, deploy_ingress,
      deploy_agreement_email_sender,
      deploy_agreement_management, deploy_agreement_process, deploy_agreement_readmodel_writer,
      deploy_attribute_registry_management, deploy_attribute_registry_process, deploy_attribute_registry_readmodel_writer,
      deploy_authorization_management, deploy_authorization_process, deploy_authorization_updater,
      deploy_catalog_management, deploy_catalog_process, deploy_catalog_readmodel_writer,
      deploy_party_registry_proxy,
      deploy_purpose_management, deploy_purpose_process, deploy_purpose_readmodel_writer,
      deploy_tenant_management, deploy_tenant_process,
      deploy_notifier, deploy_notifier_seeder,
      deploy_attributes_loader, deploy_token_details_persister,
      deploy_tenants_certified_attributes_updater, deploy_party_registry_proxy_refresher,
      deploy_metrics_report_generator, deploy_padigitale_report_generator,
      deploy_anac_certified_attributes_importer, deploy_pn_consumers,
      deploy_ivass_certified_attributes_importer,
      deploy_dashboard_metrics_report_generator, deploy_dtd_catalog_exporter,
      deploy_selfcare_onboarding_consumer,
      deploy_eservices_monitoring_exporter, deploy_eservice_descriptors_archiver,
      deploy_one_trust_notices, deploy_dtd_metrics,deploy_datalake_data_export,
      deploy_redis,
      deploy_smtp_mock]
    if: ${{ always() && needs.create_runner.result != 'skipped' }}
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        index: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
      fail-fast: true
    environment: ${{ inputs.environment }}
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Stop Github Runner
        id: stop_runner
        uses: pagopa/interop-github-runner-aws-cleanup-action@main
        with:
          environment: ${{ inputs.environment }}
          aws_region: ${{ secrets.AWS_REGION }}
          iam_role_arn: ${{ secrets.ECS_IAM_ROLE_ARN }}
          ecs_cluster_name: ${{ secrets.ECS_CLUSTER_NAME }}
          pat_token: ${{ secrets.BOT_TOKEN }}
